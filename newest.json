[{"short_id":"jq0j3s","short_id_url":"https://lobste.rs/s/jq0j3s","created_at":"2023-01-20T14:13:55.000-06:00","title":"A Closer Look at the Chaotic Ring Oscillators based TRNG Design","url":"https://eprint.iacr.org/2023/040.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eTRNG is an essential component for security applications. A vulnerable TRNG could be exploited to facilitate potential attacks or be related to a reduced key space, and eventually results in a compromised cryptographic system. A digital FIRO-/GARO-based TRNG with high throughput and high entropy rate was introduced by Jovan Dj. Golić (TC’06). However, the fact that periodic oscillation is a main failure of FIRO-/GARO-based TRNGs is noticed in the paper (Markus Dichtl, ePrint’15). We verify this problem and estimate the consequential entropy loss using Lyapunov exponents and the test suite of the NIST SP 800-90B standard. To address the problem of periodic oscillations, we propose several implementation guidelines based on a gate-level model, a design methodology to build a reliable GARO-based TRNG, and an online test to improve the robustness of FIRO-/GARO-based TRNGs. The gate-level implementation guidelines illustrate the causes of periodic oscillations, which are verified by actual implementation and bifurcation diagram. Based on the design methodology, a suitable feedback polynomial can be selected by evaluating the feedback polynomials. The analysis and understanding of periodic oscillation and FIRO-/GARO-based TRNGs are deepened by delay adjustment. A TRNG with the selected feedback polynomial may occasionally enter periodic oscillations, due to active attacks and the delay inconstancy of implementations. This inconstancy might be caused by self-heating, temperature and voltage fluctuation, and the process variation among different silicon chips. Thus, an online test module, as one indispensable component of TRNGs, is proposed to detect periodic oscillations. The detected periodic oscillation can be eliminated by adjusting feedback polynomial or delays to improve the robustness. The online test module is composed of a lightweight and responsive detector with a high detection rate, outperforming the existing detector design and statistical tests. The areas, power consumptions and frequencies are evaluated based on the ASIC implementations of a GARO, the sampling circuit and the online test module. The gate-level implementation guidelines promote the future establishment of the stochastic model of FIRO-/GARO-based TRNGs with a deeper understanding.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://eprint.iacr.org/2023/040\" rel=\"ugc\"\u003eArchive\u003c/a\u003e\u003c/p\u003e\n","description_plain":"TRNG is an essential component for security applications. A vulnerable TRNG could be exploited to facilitate potential attacks or be related to a reduced key space, and eventually results in a compromised cryptographic system. A digital FIRO-/GARO-based TRNG with high throughput and high entropy rate was introduced by Jovan Dj. Golić (TC’06). However, the fact that periodic oscillation is a main failure of FIRO-/GARO-based TRNGs is noticed in the paper (Markus Dichtl, ePrint’15). We verify this problem and estimate the consequential entropy loss using Lyapunov exponents and the test suite of the NIST SP 800-90B standard. To address the problem of periodic oscillations, we propose several implementation guidelines based on a gate-level model, a design methodology to build a reliable GARO-based TRNG, and an online test to improve the robustness of FIRO-/GARO-based TRNGs. The gate-level implementation guidelines illustrate the causes of periodic oscillations, which are verified by actual implementation and bifurcation diagram. Based on the design methodology, a suitable feedback polynomial can be selected by evaluating the feedback polynomials. The analysis and understanding of periodic oscillation and FIRO-/GARO-based TRNGs are deepened by delay adjustment. A TRNG with the selected feedback polynomial may occasionally enter periodic oscillations, due to active attacks and the delay inconstancy of implementations. This inconstancy might be caused by self-heating, temperature and voltage fluctuation, and the process variation among different silicon chips. Thus, an online test module, as one indispensable component of TRNGs, is proposed to detect periodic oscillations. The detected periodic oscillation can be eliminated by adjusting feedback polynomial or delays to improve the robustness. The online test module is composed of a lightweight and responsive detector with a high detection rate, outperforming the existing detector design and statistical tests. The areas, power consumptions and frequencies are evaluated based on the ASIC implementations of a GARO, the sampling circuit and the online test module. The gate-level implementation guidelines promote the future establishment of the stochastic model of FIRO-/GARO-based TRNGs with a deeper understanding.\r\n\r\n[Archive](https://eprint.iacr.org/2023/040)","comments_url":"https://lobste.rs/s/jq0j3s/closer_look_at_chaotic_ring_oscillators","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95135,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["cryptography","hardware","pdf"]},{"short_id":"tzh69d","short_id_url":"https://lobste.rs/s/tzh69d","created_at":"2023-01-20T14:12:55.000-06:00","title":"Glitch-free is not Enough","url":"https://eprint.iacr.org/2023/035.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eToday, resistance to physical defaults is a necessary criterion for masking schemes. In this context, the focus has long been on designing masking schemes guaranteeing security in the presence of glitches. Sadly, immunity against glitches increases latency as registers must stop the glitch propagation. Previous works could reduce the latency by removing register stages but only by impractically increasing the circuit area. Nevertheless, some relatively new attempts avoid glitches by applying DRP logic styles. Promising works in this area include LMDPL, SESYM - both presented at CHES - and Self-Timed Masking - presented at CARDIS - enabling to mask arbitrary circuits with only one cycle latency. However, even if glitches no longer occur, there are other physical defaults that may violate the security of a masked circuit. Imbalanced delay of dual rails is a known problem for the security of DRP logic styles such as WDDL but not covered in formal security models.\nIn this work, we fill the gap by presenting the delay-extended probing security model, a generalization of the popular glitch-extended probing model, covering imbalanced delays. We emphasize the importance of such a model by a formal and practical security analysis of LMDPL, SESYM, and Self-Timed Masking. While we formally prove the delay-extended security of LMDPL and Self-Timed Masking, we show that SESYM fails to provide security under our defined security model what causes detectable leakage through experimental evaluations. Hence, as the message of this work, avoiding glitches in combination with d-probing security is not enough to guarantee physical security in practice.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://eprint.iacr.org/2023/035\" rel=\"ugc\"\u003eArchive\u003c/a\u003e\u003c/p\u003e\n","description_plain":"Today, resistance to physical defaults is a necessary criterion for masking schemes. In this context, the focus has long been on designing masking schemes guaranteeing security in the presence of glitches. Sadly, immunity against glitches increases latency as registers must stop the glitch propagation. Previous works could reduce the latency by removing register stages but only by impractically increasing the circuit area. Nevertheless, some relatively new attempts avoid glitches by applying DRP logic styles. Promising works in this area include LMDPL, SESYM - both presented at CHES - and Self-Timed Masking - presented at CARDIS - enabling to mask arbitrary circuits with only one cycle latency. However, even if glitches no longer occur, there are other physical defaults that may violate the security of a masked circuit. Imbalanced delay of dual rails is a known problem for the security of DRP logic styles such as WDDL but not covered in formal security models.\r\nIn this work, we fill the gap by presenting the delay-extended probing security model, a generalization of the popular glitch-extended probing model, covering imbalanced delays. We emphasize the importance of such a model by a formal and practical security analysis of LMDPL, SESYM, and Self-Timed Masking. While we formally prove the delay-extended security of LMDPL and Self-Timed Masking, we show that SESYM fails to provide security under our defined security model what causes detectable leakage through experimental evaluations. Hence, as the message of this work, avoiding glitches in combination with d-probing security is not enough to guarantee physical security in practice.\r\n\r\n[Archive](https://eprint.iacr.org/2023/035)","comments_url":"https://lobste.rs/s/tzh69d/glitch_free_is_not_enough","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95135,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["hardware","pdf","security"]},{"short_id":"hmsvro","short_id_url":"https://lobste.rs/s/hmsvro","created_at":"2023-01-20T14:10:42.000-06:00","title":"Prolog Day - 50 years of Prolog","url":"https://www.youtube.com/watch?v=9BW0J7wwqO4","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/hmsvro/prolog_day_50_years_prolog","submitter_user":{"username":"aarroyoc","created_at":"2020-01-25T16:27:21.000-06:00","is_admin":false,"about":"Illuminati developer","is_moderator":false,"karma":589,"avatar_url":"/avatars/aarroyoc-100.png","invited_by_user":"zxtx"},"tags":["programming","video"]},{"short_id":"vyudt1","short_id_url":"https://lobste.rs/s/vyudt1","created_at":"2023-01-20T14:01:04.000-06:00","title":"PROLEAD_SW - Probing-Based Software Leakage Detection for ARM Binaries","url":"https://eprint.iacr.org/2023/034.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eA decisive contribution to the all-embracing protection of cryptographic software, especially on embedded devices, is the protection against SCA attacks. Masking countermeasures can usually be integrated into the software during the design phase. In theory, this should provide reliable protection against such physical attacks. However, the correct application of masking is a non-trivial task which often causes even experts to make mistakes. In addition to human-caused errors, micro-architectural CPU effects can lead even a seemingly theoretically correct implementation to fail satisfying the desired level of security in practice. This originates from different components of the underlying CPU which complicates the tracing of leakage back to a particular source and hence avoids to make general and device-independent statements about its security.\nIn this work, we adapt PROLEAD for the evaluation of masked software, which has recently been presented at CHES 2022 and originally developed as a simulation-based tool to evaluate masked hardware designs.\nWe enable to transfer the already known benefits of PROLEAD into the software world. These include (1) evaluation of larger designs compared to the state of the art, e.g. a full AES masked implementation, and (2) formal verification under the well-established robust probing security model. In short, together with an abstraction model for the micro-architecture, the robust probing model allows us to efficiently detect micro-architectural leakages while being independent of a concrete CPU design. As a concrete result, using PROLEAD_SW we evaluated the security of several publicly available masked software implementations and revealed multiple vulnerabilities.\u003c/p\u003e\n\u003cp\u003eNote: PROLEAD_SW is available via GitHub: \u003ca href=\"https://github.com/ChairImpSec/PROLEAD\" rel=\"ugc\"\u003ehttps://github.com/ChairImpSec/PROLEAD\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://eprint.iacr.org/2023/034\" rel=\"ugc\"\u003eArchive\u003c/a\u003e\u003c/p\u003e\n","description_plain":"A decisive contribution to the all-embracing protection of cryptographic software, especially on embedded devices, is the protection against SCA attacks. Masking countermeasures can usually be integrated into the software during the design phase. In theory, this should provide reliable protection against such physical attacks. However, the correct application of masking is a non-trivial task which often causes even experts to make mistakes. In addition to human-caused errors, micro-architectural CPU effects can lead even a seemingly theoretically correct implementation to fail satisfying the desired level of security in practice. This originates from different components of the underlying CPU which complicates the tracing of leakage back to a particular source and hence avoids to make general and device-independent statements about its security.\r\nIn this work, we adapt PROLEAD for the evaluation of masked software, which has recently been presented at CHES 2022 and originally developed as a simulation-based tool to evaluate masked hardware designs.\r\nWe enable to transfer the already known benefits of PROLEAD into the software world. These include (1) evaluation of larger designs compared to the state of the art, e.g. a full AES masked implementation, and (2) formal verification under the well-established robust probing security model. In short, together with an abstraction model for the micro-architecture, the robust probing model allows us to efficiently detect micro-architectural leakages while being independent of a concrete CPU design. As a concrete result, using PROLEAD_SW we evaluated the security of several publicly available masked software implementations and revealed multiple vulnerabilities.\r\n\r\nNote: PROLEAD_SW is available via GitHub: https://github.com/ChairImpSec/PROLEAD\r\n\r\n[Archive](https://eprint.iacr.org/2023/034)","comments_url":"https://lobste.rs/s/vyudt1/prolead_sw_probing_based_software","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95135,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["pdf","security"]},{"short_id":"7vgnu7","short_id_url":"https://lobste.rs/s/7vgnu7","created_at":"2023-01-20T13:59:46.000-06:00","title":"A Gentle Tutorial for Lattice-Based Cryptanalysis","url":"https://eprint.iacr.org/2023/032.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eThe applicability of lattice reduction to a wide variety of cryptographic situations makes it an important part of the cryptanalyst’s toolbox. Despite this, the construction of lattices and use of lattice reduction algorithms for cryptanalysis continue to be somewhat difficult to understand for beginners. This tutorial aims to be a gentle but detailed introduction to lattice-based cryptanalysis targeted towards the novice cryptanalyst with little to no background in lattices. We explain some popular attacks through a conceptual model that simplifies the various components of a lattice attack.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://eprint.iacr.org/2023/032\" rel=\"ugc\"\u003eArchive\u003c/a\u003e\u003c/p\u003e\n","description_plain":"The applicability of lattice reduction to a wide variety of cryptographic situations makes it an important part of the cryptanalyst's toolbox. Despite this, the construction of lattices and use of lattice reduction algorithms for cryptanalysis continue to be somewhat difficult to understand for beginners. This tutorial aims to be a gentle but detailed introduction to lattice-based cryptanalysis targeted towards the novice cryptanalyst with little to no background in lattices. We explain some popular attacks through a conceptual model that simplifies the various components of a lattice attack.\r\n\r\n[Archive](https://eprint.iacr.org/2023/032)","comments_url":"https://lobste.rs/s/7vgnu7/gentle_tutorial_for_lattice_based","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95135,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["cryptography","pdf"]},{"short_id":"crc4pt","short_id_url":"https://lobste.rs/s/crc4pt","created_at":"2023-01-20T13:45:04.000-06:00","title":"Printing to stdout with an empty main","url":"https://www.cedricmartens.com/articles/empty_main","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/crc4pt/printing_stdout_with_empty_main","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":19293,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["c++"]},{"short_id":"aja2hg","short_id_url":"https://lobste.rs/s/aja2hg","created_at":"2023-01-20T13:27:44.000-06:00","title":"The NixOS “settings” option: when and how to use it","url":"https://zimbatm.com/notes/the-nixos-settings-option-when-and-how-to-use-it","score":3,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/aja2hg/nixos_settings_option_when_how_use_it","submitter_user":{"username":"l0b0","created_at":"2022-02-14T02:54:31.000-06:00","is_admin":false,"about":"Open source developer.","is_moderator":false,"karma":627,"avatar_url":"/avatars/l0b0-100.png","invited_by_user":"gerikson","github_username":"l0b0"},"tags":["nix"]},{"short_id":"9fwfus","short_id_url":"https://lobste.rs/s/9fwfus","created_at":"2023-01-20T13:16:14.000-06:00","title":"Get Dumber","url":"https://www.supergoodcode.com/get-dumber/","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9fwfus/get_dumber","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.\r\n\r\nDavid Chisnall stan account.","is_moderator":false,"karma":95135,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["performance"]},{"short_id":"lkle1s","short_id_url":"https://lobste.rs/s/lkle1s","created_at":"2023-01-20T13:01:08.000-06:00","title":"Automatic reference counting vs mark-and-sweep","url":"https://youtu.be/c32zXYAK7CI","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/lkle1s/automatic_reference_counting_vs_mark","submitter_user":{"username":"deavmi","created_at":"2018-06-30T15:27:34.000-05:00","is_admin":false,"about":"I’m Tristan B. Kildaire (or deavmi on the Internet) and I’m a computer programmer. I love tinkering around with all the bits of software that my computer runs but typically more on the low-level sides of things. I’m really interested in how operating systems work as a whole and their components such as kernels, networking stacks, linking-loaders, IPC, paging, virtual memory, file-systems and the list goes on. There’s so much to learn from understanding these complex systems and each aspect of them never leaves me bored!\r\n\r\nYou could call me a language enthusiast, from the design to the implementation. I always want to know how things work and I’ve even spent time reading the source code for some language runtimes to get a better understanding. If I am feeling creative then I try write my own or write something in Forth! I love building networks too - I have an interest in setting up inter-networks with routing protocols, assigning numbers and setting up tunnels in order to build a huge network that I can play around on. When I’m not using other peoples' protocols I am busy writing my own to see what I can cobble out to itch my scratch on trying interesting concepts out.\r\n\r\nI like a good glass of red wine and cheese. I have an avid enjoyment for music from the 70s and the 80s and have rather interesting political views (nothing to be alarmed of) but most importantly I like to help others learn and put a smile on their face.","is_moderator":false,"karma":139,"avatar_url":"/avatars/deavmi-100.png","invited_by_user":"duclare","github_username":"deavmi","keybase_signatures":[{"kb_username":"tristankildaire","sig_hash":"4397ec164f1a65b7fd0803bc85cd0b12d06cb2606c2ae0a27795dd90e98e219c0f"}]},"tags":["programming","video"]},{"short_id":"ct1u0s","short_id_url":"https://lobste.rs/s/ct1u0s","created_at":"2023-01-20T09:51:00.000-06:00","title":"Space leaks exploration in Haskell","url":"https://cs.stanford.edu/~sumith/docs/report-spaceleaks.pdf","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ct1u0s/space_leaks_exploration_haskell","submitter_user":{"username":"srid","created_at":"2019-12-15T08:34:41.000-06:00","is_admin":false,"about":"My latest project: https://github.com/EmaApps/emanote","is_moderator":false,"karma":2626,"avatar_url":"/avatars/srid-100.png","invited_by_user":"Bowero","github_username":"srid","keybase_signatures":[{"kb_username":"srid","sig_hash":"e6701544d15d41cd50cf0b336aa711802c34f53d1df4356ae74f47b9aec5c6700f"}]},"tags":["haskell","pdf"]},{"short_id":"4wcoy5","short_id_url":"https://lobste.rs/s/4wcoy5","created_at":"2023-01-20T09:42:21.000-06:00","title":"Reverse engineering the MacBook clamshell mode","url":"https://alinpanaitiu.com/blog/turn-off-macbook-display-clamshell/","score":17,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/4wcoy5/reverse_engineering_macbook_clamshell","submitter_user":{"username":"alin","created_at":"2020-03-10T05:45:37.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":128,"avatar_url":"/avatars/alin-100.png","invited_by_user":"ajeetdsouza","github_username":"alin23","twitter_username":"alinp32"},"tags":["mac","reversing"]},{"short_id":"5wggqy","short_id_url":"https://lobste.rs/s/5wggqy","created_at":"2023-01-20T09:06:37.000-06:00","title":"Rust in 2023: Growing up","url":"http://smallcultfollowing.com/babysteps/blog/2023/01/20/rust-in-2023-growing-up/","score":7,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/5wggqy/rust_2023_growing_up","submitter_user":{"username":"matklad","created_at":"2019-07-02T07:23:10.000-05:00","is_admin":false,"about":"Working on IDE support for the Rust language.\r\n\r\nhttps://github.com/matklad","is_moderator":false,"karma":4499,"avatar_url":"/avatars/matklad-100.png","invited_by_user":"skade","github_username":"matklad"},"tags":["rust"]},{"short_id":"njrjkz","short_id_url":"https://lobste.rs/s/njrjkz","created_at":"2023-01-20T08:42:15.000-06:00","title":"the best sudo replacement","url":"https://xeiaso.net/blog/%F0%9F%A5%BA","score":18,"flags":0,"comment_count":9,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/njrjkz/best_sudo_replacement","submitter_user":{"username":"cadey","created_at":"2019-03-08T17:23:38.000-06:00","is_admin":false,"about":"Xe Iaso\r\n\r\nkastermakfa\r\n\r\nko kanro","is_moderator":false,"karma":10312,"avatar_url":"/avatars/cadey-100.png","invited_by_user":"apg","github_username":"Xe","twitter_username":"theprincessxena","keybase_signatures":[{"kb_username":"xena","sig_hash":"a19dbebc33a79273556666968b3ec01d986d34e4a53cc9e0ece695b9bec4cd6c0f"}]},"tags":["satire","security","unix"]},{"short_id":"poj5zg","short_id_url":"https://lobste.rs/s/poj5zg","created_at":"2023-01-20T08:17:51.000-06:00","title":"Debugging a use-after-free in gdb","url":"https://pernos.co/examples/use-after-free","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/poj5zg/debugging_use_after_free_gdb","submitter_user":{"username":"teymour","created_at":"2021-06-01T03:07:56.000-05:00","is_admin":false,"about":"stuck in the computer nightmare","is_moderator":false,"karma":822,"avatar_url":"/avatars/teymour-100.png","invited_by_user":"bkolobara","github_username":"teymour-aldridge"},"tags":["debugging"]},{"short_id":"b75zvp","short_id_url":"https://lobste.rs/s/b75zvp","created_at":"2023-01-20T08:12:25.000-06:00","title":"Backporting changes is clearly hard, which is a good reason to avoid it","url":"https://utcc.utoronto.ca/~cks/space/blog/programming/BackportsAreHard","score":2,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/b75zvp/backporting_changes_is_clearly_hard","submitter_user":{"username":"technetium","created_at":"2020-02-06T19:52:39.000-06:00","is_admin":false,"about":"A sentient lump of a certain high-density material.\r\n\r\nI'm working on a traditional roguelike: [GitHub](https://github.com/kiedtl/roguelike)","is_moderator":false,"karma":5004,"avatar_url":"/avatars/technetium-100.png","invited_by_user":"ngoldbaum","github_username":"kiedtl"},"tags":["linux"]},{"short_id":"6v4xuv","short_id_url":"https://lobste.rs/s/6v4xuv","created_at":"2023-01-20T08:11:28.000-06:00","title":"Rust should own its debugger experience","url":"https://blog.yoshuawuyts.com/rust-should-own-its-debugger-experience/","score":18,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/6v4xuv/rust_should_own_its_debugger_experience","submitter_user":{"username":"rsdbdr203","created_at":"2022-05-26T15:12:50.000-05:00","is_admin":false,"about":"I like Rust, and databases","is_moderator":false,"karma":506,"avatar_url":"/avatars/rsdbdr203-100.png","invited_by_user":"jpn627"},"tags":["rust"]},{"short_id":"rosukz","short_id_url":"https://lobste.rs/s/rosukz","created_at":"2023-01-20T05:59:08.000-06:00","title":"What are you doing this weekend?","url":"","score":6,"flags":0,"comment_count":11,"description":"\u003cp\u003eFeel free to tell what you plan on doing this weekend and even ask for help or feedback.\u003c/p\u003e\n\u003cp\u003ePlease keep in mind it’s more than OK to do nothing at all too!\u003c/p\u003e\n","description_plain":"Feel free to tell what you plan on doing this weekend and even ask for help or feedback.\r\n\r\nPlease keep in mind it’s more than OK to do nothing at all too!","comments_url":"https://lobste.rs/s/rosukz/what_are_you_doing_this_weekend","submitter_user":{"username":"caius","created_at":"2014-05-13T06:58:30.000-05:00","is_admin":false,"about":"Compulsive Geek, Ale Connoisseur, Occasionally Responsible Adult.","is_moderator":false,"karma":8489,"avatar_url":"/avatars/caius-100.png","invited_by_user":"lauris","github_username":"caius","twitter_username":"Caius"},"tags":["ask","programming"]},{"short_id":"exun2m","short_id_url":"https://lobste.rs/s/exun2m","created_at":"2023-01-20T05:13:57.000-06:00","title":"A curated list of questions to work on a client's infrastructure / migrate applications to the cloud","url":"https://github.com/dyrector-io/awesome-infrastructure-questions","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/exun2m/curated_list_questions_work_on_client_s","submitter_user":{"username":"polaroi8d","created_at":"2023-01-11T01:18:33.000-06:00","is_admin":false,"about":"builder / product engineer / people addict ","is_moderator":false,"karma":18,"avatar_url":"/avatars/polaroi8d-100.png","invited_by_user":"apc","github_username":"polaroi8d"},"tags":["devops"]},{"short_id":"u6nz4f","short_id_url":"https://lobste.rs/s/u6nz4f","created_at":"2023-01-20T01:48:37.000-06:00","title":"Debugging a Crash in OpenRCT2","url":"http://voidstar.tech/rct_crash/","score":13,"flags":0,"comment_count":2,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/u6nz4f/debugging_crash_openrct2","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"🐋\r\nhttps://raymii.org","is_moderator":false,"karma":19293,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["games"]},{"short_id":"igjz04","short_id_url":"https://lobste.rs/s/igjz04","created_at":"2023-01-19T20:45:14.000-06:00","title":"polyfill-data: Adds the Ruby 3.2 Data class to lower Ruby versions","url":"https://github.com/saturnflyer/polyfill-data","score":1,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/igjz04/polyfill_data_adds_ruby_3_2_data_class","submitter_user":{"username":"saturnflyer","created_at":"2013-10-28T11:58:44.000-05:00","is_admin":false,"about":"I hack mostly in Ruby and authored Clean Ruby http://clean-ruby.com, Ruby DSL Handbook http://clean-ruby.com/dsl, and the Ruby Metaprogramming MasterClass http://master-class.saturnflyer.com","is_moderator":false,"karma":82,"avatar_url":"/avatars/saturnflyer-100.png","invited_by_user":"SeanTAllen"},"tags":["ruby"]},{"short_id":"ni2pcb","short_id_url":"https://lobste.rs/s/ni2pcb","created_at":"2023-01-19T20:07:50.000-06:00","title":"Apple Lisa Emulator Project","url":"https://lisa.sunder.net/","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ni2pcb/apple_lisa_emulator_project","submitter_user":{"username":"Rochus","created_at":"2020-07-11T16:57:57.000-05:00","is_admin":false,"about":"See http://www.rochus-keller.ch","is_moderator":false,"karma":340,"avatar_url":"/avatars/Rochus-100.png","invited_by_user":"technomancy"},"tags":["historical","mac","osdev","virtualization"]},{"short_id":"ns4mzp","short_id_url":"https://lobste.rs/s/ns4mzp","created_at":"2023-01-19T18:15:32.000-06:00","title":"how to completely own an airline in 3 easy steps","url":"https://maia.crimew.gay/posts/how-to-hack-an-airline/","score":47,"flags":0,"comment_count":4,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/ns4mzp/how_completely_own_airline_3_easy_steps","submitter_user":{"username":"easrng","created_at":"2021-10-16T14:29:59.000-05:00","is_admin":false,"about":"see https://profile.easrng.net","is_moderator":false,"karma":168,"avatar_url":"/avatars/easrng-100.png","invited_by_user":"charlotte"},"tags":["security"]},{"short_id":"9gc5gb","short_id_url":"https://lobste.rs/s/9gc5gb","created_at":"2023-01-19T17:36:52.000-06:00","title":"Simple TUIs with Babashka and Gum","url":"https://rattlin.blog/bbgum.html","score":6,"flags":0,"comment_count":0,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/9gc5gb/simple_tuis_with_babashka_gum","submitter_user":{"username":"Yogthos","created_at":"2017-05-26T15:31:12.000-05:00","is_admin":false,"about":"A sentience trapped in a prison of meat.\r\n","is_moderator":false,"karma":8581,"avatar_url":"/avatars/Yogthos-100.png","invited_by_user":"gered"},"tags":["clojure","devops"]},{"short_id":"kgkswm","short_id_url":"https://lobste.rs/s/kgkswm","created_at":"2023-01-19T16:55:02.000-06:00","title":"Deep Cloning Objects in JavaScript, the Modern Way","url":"https://www.builder.io/blog/structured-clone","score":2,"flags":0,"comment_count":1,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/kgkswm/deep_cloning_objects_javascript_modern","submitter_user":{"username":"friendlysock","created_at":"2014-02-20T00:43:41.000-06:00","is_admin":false,"about":"*Literally* full of ants.\r\n\r\nFriendly engineer and human being.\r\n\r\nStrong opinions held weakly, sometimes weekly.\r\n\r\n\u003e Gentrification is the process by which nebulous threats are pacified and alchemised into money. \r\n","is_moderator":false,"karma":39309,"avatar_url":"/avatars/friendlysock-100.png","invited_by_user":"MasonJar"},"tags":["javascript"]},{"short_id":"zv3hmn","short_id_url":"https://lobste.rs/s/zv3hmn","created_at":"2023-01-19T16:27:53.000-06:00","title":"sshd random relinking at boot","url":"https://undeadly.org/cgi?action=article;sid=20230119075627","score":9,"flags":0,"comment_count":3,"description":"","description_plain":"","comments_url":"https://lobste.rs/s/zv3hmn/sshd_random_relinking_at_boot","submitter_user":{"username":"bink","created_at":"2015-07-24T18:30:45.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":122,"avatar_url":"/avatars/bink-100.png","invited_by_user":"brynet"},"tags":["openbsd","security"]}]